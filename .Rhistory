aggtest
aggtest = aggregate(Emissions ~ scc, data=subtest, sum)
aggtest = aggregate(Emissions ~ SCC, data=subtest, sum)
aggtest
rm(list=list(aggtest,subtest))
rm(list=c(aggtest,subtest))
rm(list(aggtest,subtest))
rm(list("aggtest","subtest"))
rm(aggtest)
rm(subtest)
SCCs <- readRDS("Source_Classification_Code.rds")
View(SCCs)
ss = subset(SCCs, grep("[t][T]rucks"),Short.Name)
ss = subset(SCCs, grep("[t][T]rucks",Short.Name))
ss = subset(SCCs, grepl("[t][T]rucks",Short.Name))
ss = subset(SCCs, grepl("^H",Short.Name))
View(ss)
ss = subset(SCCs, grepl("^H",Short.Name))
ss = subset(SCCs, grep("^H",Short.Name))
ss = subset(SCCs, grep(".[t][T]rucks.",Short.Name))
ss = subset(SCCs, grepl(".[t][T]rucks.",Short.Name))
ss = subset(SCCs, grepl(".Trucks.",Short.Name))
View(ss)
ss = subset(SCCs, grepl(".[tT]rucks.",Short.Name))
ss = subset(SCCs, grepl(".[tT]rucks.",Short.Name), select=1:4)
View(ss)
ss = subset(SCCs, grepl(".[t]rucks.",Short.Name), select=1:4)
ss = subset(SCCs, grepl(".[T]rucks.",Short.Name), select=1:4)
merge(p2sub,ss)
mm = merge(p2sub,ss)
mm = merge(p2sub,ss, by=SCC)
View(`p2sub`)
View(`p2data`)
View(`p1data`)
View(mm)
View(`p2sub`)
head(NEI)
subset(NEI, fips="09001")
NEI09001 = subset(NEI, fips=="09001")
mm = merge(NEI09001,ss, by=SCC)
View(NEI09001)
View(ss)
mm = merge(NEI09001,ss, by.x=SCC, by.y=SCC)
mm = merge(NEI09001,ss)
View(mm)
NEIB = subset(NEI, fips=="24510")
rm(NEI09001)
View(NEIB)
View(NEIB)
p3sub = subset(NEI, fips=="24510")
p3data = aggregate(p3sub, Emissions ~ type + year, sum, na.rm=T)
p3data = aggregate(p3sub, Emissions ~ list("type","year"), sum, na.rm=T)
p3data = aggregate(p3sub, Emissions ~ type, sum, na.rm=T)
p3data = aggregate(p3sub, Emissions ~ list("type","year"), FUN=sum, na.rm=T)
?aggregate
p3data = aggregate(Emissions ~ type + year, p3sub,sum, na.rm=T)
View(`p3data`)
p3data = aggregate(Emissions ~ type + year, p3sub,sum, na.rm=T)
View(`p3data`)
> p3data = aggregate(Emissions ~ type + year, p3sub,sum, na.rm=
names(p3data)[1:2] <- C("Type","Year")
names(p3data)[1:2] <- c("Type","Year")
View(`p3data`)
ggplot2( layer( data=p3data, aes=(x=Year, y= Emissions, color=Type)))
ggplot2( layer( data=p3data, mapping=aes(x=Year, y= Emissions, color=Type), geom="line"))
library(ggplot2)
ggplot2( layer( data=p3data, mapping=aes(x=Year, y= Emissions, color=Type), geom="line"))
ggplot( layer( data=p3data, mapping=aes(x=Year, y= Emissions, color=Type), geom="line"))
qplot(Year, Emissions, data=p3data, geom="line"", method=, formula=, facets=, xlim=, ylim= xlab=, ylab=, main=, sub=)
qplot(Year, Emissions, data=p3data, geom="line", facets=Type, main="Emissions by Type", sub="Baltimore City")
qplot(Year, Emissions, data=p3data, geom=line, facets=Type, main="Emissions by Type", sub="Baltimore City")
qplot(Year, Emissions, data=p3data, geom="points", facets=Type, main="Emissions by Type", sub="Baltimore City")
qplot(Year, Emissions, data=p3data, geom="points", facets=.~Type, main="Emissions by Type", sub="Baltimore City")
qplot(Year, Emissions, data=p3data, geom="point", facets=.~Type, main="Emissions by Type", sub="Baltimore City")
dev.off)
dev.off()
qplot(Year, Emissions, data=p3data, geom="line", color=Type, main="Emissions by Type", sub="Baltimore City")
source('~/GitHub/ExData_Plotting2/plot3.R')
source('~/GitHub/ExData_Plotting2/plot3.R')
dev.off()
source('~/GitHub/ExData_Plotting2/plot3.R')
source('~/GitHub/ExData_Plotting2/plot3.R')
qplot(Year, Emissions, data=p3data, geom="line", color=Type,
main=mainlines)
dev.off()
source('~/GitHub/ExData_Plotting2/plot3.R')
plot3
source('~/GitHub/ExData_Plotting2/plot3.R')
plot3
View(`p3data`)
plot3
source('~/GitHub/ExData_Plotting2/plot3.R')
plot3
source('~/GitHub/ExData_Plotting2/plot3.R')
plot3
source('~/GitHub/ExData_Plotting2/plot3.R')
plot3
source('~/GitHub/ExData_Plotting2/plot3.R')
source('~/GitHub/ExData_Plotting2/plot3.R')
source('~/GitHub/ExData_Plotting2/plot3.R')
dev.off()
source('~/GitHub/ExData_Plotting2/plot3.R')
View(ss)
View(SCCs)
ss = subset(SCCs, grepl(".coal.",Short.Name))
View(ss)
ss = subset(SCCs, grepl(".[Cc]oal.",Short.Name))
View(ss)
ss = subset(SCCs, grepl(".[Cc]oal.",Short.Name) && grepl(".[Cc]omb.",Short.Name))
ss = subset(SCCs, grepl(".[Cc]oal.",Short.Name) & grepl(".[Cc]omb.",Short.Name))
View(ss)
coalcats = subset(SCCs, grepl(".[Cc]oal.",Short.Name) & grepl(".[Cc]omb.",Short.Name))
p4sub= merge(NEI, coalcats)
View(`p4sub`)
p4data = aggregate(Emissions ~ year, p4sub,sum, na.rm=T)
View(`p4data`)
source('~/GitHub/ExData_Plotting2/plot4.R')
View(`p4data`)
source('~/GitHub/ExData_Plotting2/plot4.R')
source('~/GitHub/ExData_Plotting2/plot4.R')
source('~/GitHub/ExData_Plotting2/plot4.R')
source('~/GitHub/ExData_Plotting2/plot4.R')
source('~/GitHub/ExData_Plotting2/plot4.R')
source('~/GitHub/ExData_Plotting2/plot4.R')
x=list(ls())
x
x[4]=NULL
x
x[4]
x
x=ls()
x
x[4]=NULL
x
x[4]=""
x
rm(x)
x=ls()
rm(list=x)
x
source('~/GitHub/ExData_Plotting2/plot4.R')
rm(x)
source('~/GitHub/ExData_Plotting2/plot4.R')
plot4
rm(plot4)
dev.off()
source('~/GitHub/ExData_Plotting2/plot3.R')
source('~/GitHub/ExData_Plotting2/plot4.R')
View(`p4sub`)
View(`p4data`)
str(plot3)
plot3
?readRDS
?merge
mvcats = subset(SCCs, grepl(".[Vv]ehic.",Short.Name) ! grepl(".[Vv]ehic.",SCC.Level.One))
mvcats = subset(SCCs, grepl(".[Vv]ehic.",Short.Name) !! grepl(".[Vv]ehic.",SCC.Level.One))
mvcats = subset(SCCs, grepl(".[Vv]ehic.",Short.Name)  & grepl(".[Vv]ehic.",SCC.Level.One))
mvcats = subset(SCCs, grepl(".[Vv]ehic.",Short.Name) | grepl(".[Vv]ehic.",SCC.Level.One))
View(mvcats)
mvcats = subset(SCCs, grepl(".[Vv]ehic.",Short.Name) | grepl(".[Vv]ehic.",Short.Name))
View(mvcats)
mvcats = subset(SCCs, !grepl(".[Vv]ehic.",Short.Name) & grepl(".[Vv]ehic.",SCC.Level.One))
source('~/GitHub/ExData_Plotting2/plot5.R')
source('~/GitHub/ExData_Plotting2/plot5.R')
source('~/GitHub/ExData_Plotting2/plot5.R')
source('~/GitHub/ExData_Plotting2/plot5.R')
?qplot
View(mvcats)
dev.off
png("plot5.png")
# 2-line main title on the plot
mainlines = c("PM2.5 Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
plot5 = qplot(Year, Emissions/1000, data=p5data, geom=c("line"."point","text"),
main=mainlines, ylab="Emissions (1,000 tons)")
print(plot5)
dev.off()
dev.off
png("plot5.png")
# 2-line main title on the plot
mainlines = c("PM2.5 Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
plot5 = qplot(Year, Emissions/1000, data=p5data, geom=c("line","point","text"),
main=mainlines, ylab="Emissions (1,000 tons)")
print(plot5)
dev.off()
dev.off
png("plot5.png")
# 2-line main title on the plot
mainlines = c("PM2.5 Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
plot5 = qplot(Year, Emissions/1000, data=p5data, geom=c("line","point"),
main=mainlines, ylab="Emissions (1,000 tons)")
print(plot5)
dev.off()
source('~/GitHub/ExData_Plotting2/plot5.R')
View(mvcats)
source('~/GitHub/ExData_Plotting2/plot5.R')
mvcats = subset(SCCs, grepl(".[Vv]ehic.",Short.Name) & grepl("^[Mm]obile.", SCC.Level.One) )
View(mvcats)
mvcats = subset(SCCs, grepl(".[Vv]ehic.",Short.Name) | grepl("^[Mm]obile.", SCC.Level.One) )
View(mvcats)
mvcats = subset(SCCs, grepl(".[Vv]ehic.",paste(Short.Name,EI.Sector,SCC.Level.Two, SCC.Level.Three) & grepl("^[Mm]obile.", SCC.Level.One) )
mvcats = subset(SCCs, grepl(".[Vv]ehic.",paste(Short.Name,EI.Sector,SCC.Level.Two, SCC.Level.Three)) & grepl("^[Mm]obile.", SCC.Level.One) )
mvcats = subset(SCCs, grepl(".[Vv]ehic.",paste(Short.Name,EI.Sector,SCC.Level.Two, SCC.Level.Three)) & grepl("^[Mm]obile.", SCC.Level.One) )
View(mvcats)
source('~/GitHub/ExData_Plotting2/plot5.R')
source('~/GitHub/ExData_Plotting2/plot5.R')
source('~/GitHub/ExData_Plotting2/plot5.R')
mvcats = subset(SCCs, grepl("[Mm]obile|[Vv]ehicles", EI.Sector ))
View(mvcats)
mvcats = subset(SCCs, grepl("[[Mm]obile[Vv]ehicles]", EI.Sector ))
View(mvcats)
mvcats = subset(SCCs, grepl("[Mm]obile",EI.Sector) | grepl("[Vv]ehicles]", EI.Sector ))
View(mvcats)
mvcats = subset(SCCs, grepl("[Mm]obile",EI.Sector) & grepl("[Vv]ehicles]", EI.Sector ))
mvcats = subset(SCCs, grepl("[Mm]obile",EI.Sector) & grepl("[Vv]ehicle]", EI.Sector ))
mvcats = subset(SCCs, grepl("[Mm]obile",EI.Sector) && grepl("[Vv]ehicle]", EI.Sector ))
mvcats = subset(SCCs, grepl("[Mm]obile",EI.Sector) | grepl("[Vv]ehicle]", EI.Sector ))
View(mvcats)
mvcats = subset(SCCs, grepl("[Vv]ehicle]", EI.Sector ))
mvcats = subset(SCCs, grepl(".*[Vv]ehicle]", EI.Sector ))
mvcats = subset(SCCs, grepl(".*Vehicle]", EI.Sector ))
mvcats = subset(SCCs, grepl("Vehicle]", EI.Sector ))
mvcats = subset(SCCs, grepl("Mobdfsdfdsfs]", EI.Sector ))
mvcats = subset(SCCs, grepl("[Mm]obile",EI.Sector) & grepl("[Vv]ehicle", EI.Sector ))
source('~/GitHub/ExData_Plotting2/plot5.R')
mvcats = subset(SCCs,grep("[Mm]obile|[Vv]ehicles", EI.Sector) )
mvcats = subset(SCCs,grepl("[Mm]obile|[Vv]ehicles", EI.Sector) )
source('~/GitHub/ExData_Plotting2/plot5.R')
mvcats = subset(SCCs, grepl("[Mm]obile|[Vv]ehicles", EI.Sector) & !(  grepl("[Mm]obile",EI.Sector) & grepl("[Vv]ehicles", EI.Sector )   )
)
View(`p4data`)
View(mvcats)
View(`p5data`)
View(mvcats)
source('~/GitHub/ExData_Plotting2/plot5.R')
p5data = aggregate(Emissions ~ year + EI.Sector, p5sub,sum, na.rm=T)
names(p5adata)[1] <- "Year"
dev.off
png("plot5a.png")
# 2-line main title on the plot
mainlines = c("PM2.5 Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
plot5a = qplot(Year, Emissions, data=p5data, geom=c("line","point"), color=EI.Sector
main=mainlines, ylab="Emissions (tons)")
print(plot5a)
dev.off()
p5data = aggregate(Emissions ~ year + EI.Sector, p5sub,sum, na.rm=T)
names(p5adata)[1] <- "Year"
dev.off
png("plot5a.png")
# 2-line main title on the plot
mainlines = c("PM2.5 Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
plot5a = qplot(Year, Emissions, data=p5data, geom=c("line","point"), color=EI.Sector,
main=mainlines, ylab="Emissions (tons)")
print(plot5a)
dev.off()
p5adata = aggregate(Emissions ~ year + EI.Sector, p5sub,sum, na.rm=T)
names(p5adata)[1] <- "Year"
dev.off
png("plot5a.png")
# 2-line main title on the plot
mainlines = c("PM2.5 Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
plot5a = qplot(Year, Emissions, data=p5data, geom=c("line","point"), color=EI.Sector,
main=mainlines, ylab="Emissions (tons)")
print(plot5a)
dev.off()
View(`p5adata`)
p5adata = aggregate(Emissions ~ year + EI.Sector, p5sub,sum, na.rm=T)
names(p5adata)[1] <- "Year"
dev.off
png("plot5a.png")
# 2-line main title on the plot
mainlines = c("PM2.5 Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
plot5a = qplot(Year, Emissions, data=p5adata, geom=c("line","point"), color=EI.Sector,
main=mainlines, ylab="Emissions (tons)")
print(plot5a)
dev.off()
mvcats = subset(SCCs, grepl("[Mm]obile|[Vv]ehicles", EI.Sector))
p5sub = merge(NEIb, mvcats)
p5adata = aggregate(Emissions ~ year + EI.Sector, p5sub,sum, na.rm=T)
names(p5adata)[1] <- "Year"
dev.off
png("plot5a.png")
# 2-line main title on the plot
mainlines = c("PM2.5 Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
plot5a = qplot(Year, Emissions, data=p5adata, geom=c("line","point"), color=EI.Sector,
main=mainlines, ylab="Emissions (tons)")
print(plot5a)
dev.off()
View(`p5adata`)
source('~/GitHub/ExData_Plotting2/plot5a.R')
mvcats = subset(SCCs, grepl("[Mm]obile|[Vv]ehicles", EI.Sector) & !(  grevdfgfdgdfgdf
)
)
exprression("PM"[2.5]"" Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
exprression("PM"[2.5]" Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
expression("PM"[2.5]" Emis")
expression("PM"[2.5])
x = expression("PM"[2.5])
x
?expression
str(x)
class(x)
x[1]
x[1][1]
x
print(x)
evaluate(x)
eval(x)
x
eval(1 + 3)
mainlines = expression("PM"[2.5]" Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
mainlines = expression("PM",[2.5]," Emissions from Motor Vehicle Sources, by Year\nBaltimore City")
eval(expression(22[x]))
eval(expression(22[2]))
eval(expression(x[2]))
source('~/GitHub/ExData_Plotting2/plot5.R')
source('~/GitHub/ExData_Plotting2/plot5.R')
source('~/GitHub/ExData_Plotting2/plot6.R')
View(`p6data`)
cbind(c("12","13"),c("A","B"))
ll=cbind(c("12","13"),c("A","B"))
ll
colnames(ll) = c("fips","County")
ll
source('~/GitHub/ExData_Plotting2/plot6.R')
source('~/GitHub/ExData_Plotting2/plot6.R')
View(`p6data`)
source('~/GitHub/ExData_Plotting2/plot2.R')
dev.off()
source('~/GitHub/ExData_Plotting2/plot2.R')
source('~/GitHub/ExData_Plotting2/plot2.R')
source('~/GitHub/ExData_Plotting2/plot1.R')
source('~/GitHub/ExData_Plotting2/plot6.R')
browseVignettes()
quit()
256^2
256^8
256^8 / 1000000000
?numeric
quit()
quit()
rm(list=ls())
setwd("~/GitHub/RepData_PeerAssessment1")
setwd("~/GitHub/RepData_PeerAssessment1")
quit()
?read.csv()
?read.csv()
act <- read.csv(activity.zip)
summary(act)
act <- read.csv("activity.zip"")
summary(act)
dfdf
""
act <- read.csv("activity.zip)
summary(act)
ff
""
'
"
act <- read.csv("activity.zip")
summary(act)
act <- read.csv(unzip("activity.zip"))
summary(act)
tail(act)
12*24
str(act)
age <- c(1,2,NA,4)
age.i <- impute(age)
act$interval = as.character(act$interval)
str(act)
act <- read.csv(unzip("activity.zip"))
summary(act)
head(act)
str(act)
act$date = as.date(act$date)
act$date = as.Date(act$date)
head(act)
str(act)
weekdays(acct$date[100])
weekdays(act$date[100])
act$weekday = if(weekdays(act$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday")
act$weekday = ifelse(weekdays(act$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday")
head(act)
?head()
act$dayofweek = weekdays(act$date)
head(act, 50)
head(act, 150)
act(300:400,)
act[300:400,]
act[interval==5,]
act[act$interval==5,]
act <- read.csv(unzip("activity.zip"))
act$interval = as.character(act$interval)
act$date = as.Date(act$date)
act$workday = ifelse(weekdays(act$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday")
summary(act)
head(act[interval==1200,],20)
act <- read.csv(unzip("activity.zip"))
act$interval = as.character(act$interval)
act$date = as.Date(act$date)
act$workday = ifelse(weekdays(act$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday")
summary(act)
head(act[act$interval==1200,],20)
act <- read.csv(unzip("activity.zip"))
act$interval = as.character(act$interval)
act$date = as.Date(act$date)
act$workday = as.factor(ifelse(weekdays(act$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
str(act)
summary(act)
head(act[act$interval==1200,],10)
act <- read.csv(unzip("activity.zip"))
## act$interval = as.character(act$interval)
act$date = as.Date(act$date)
act$workday = as.factor(ifelse(weekdays(act$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
str(act)
summary(act)
head(act[act$interval==1200,],10)
?table()
with (act table(mean(steps), date))
with (act, table(mean(steps), date))
meansbydate = aggregate(act, steps ~ date)
meansbydate = aggregate(act, steps ~ date, fun=MEAN)
meansbydate = aggregate(act, steps ~ date, fUN=MEAN)
meansbydate = aggregate(act, steps ~ date, FUN=MEAN)
meansbydate = aggregate(act, steps ~ date, FUN=MEANS)
meansbydate = aggregate(act, by=date, FUN=MEAN)
meansbydate = aggregate(act, by=date, FUN="mean")
meansbydate = aggregate(act, steps ~ date, FUN="mean")
meansbydate = aggregate(act, steps ~ list(date), FUN="mean")
meansbydate = aggregate(act, steps ~ as.list(date), FUN="mean")
tapply(act$steps, date, mean)
tapply(act$steps, as.factor(date), mean)
tapply(act$steps, as.factor(acct$date), mean)
tapply(act$steps, as.factor(act$date), mean)
tapply(act$steps, as.factor(act$date), mean, na.rm=T)
tapply(act$steps, as.factor(act$date), mean, na.rm=TRUE)
act[act$date="2012-10-08"]
act[act$date="2012-10-08",]
act[act$date=="2012-10-08",]
meansbydate = tapply(act$steps, as.factor(act$date), mean, na.rm=TRUE)
head(meansbydate)
str(meansbydate)
plot(meannsbydate)
plot(meansbydate)
act <- read.csv(unzip("activity.zip"))
## act$interval = as.character(act$interval)
act$date = as.Date(act$date)
act$workday = as.factor(ifelse(weekdays(act$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
str(act)
summary(act)
head(act[act$interval==1200,],10)
meansbydate = tapply(act$steps, as.factor(act$date), mean, na.rm=TRUE)
plot(meansbydate)
meansbydate = tapply(act$steps, as.factor(act$date), mean, na.rm=TRUE)
plot(meansbydate)
age
str(meansbydate)
meansbyinterval = tapply(act$steps, as.factor(act$interval), mean, na.rm=TRUE)
plot(meansbydate)
plot(meansbyinterval)
summary(meansbyinterval)
str(meansbyinterval)
tail(meansbyinterval)
quit()
sumbydate = tapply(act$steps, as.factor(act$date), sum, na.rm=TRUE)
hist(sumbydate)
meansbydate = tapply(act$steps, as.factor(act$date), mean, na.rm=TRUE)
mediansbydate = tapply(act$steps, as.factor(act$date), median, na.rm=TRUE)
sumbydate = tapply(act$steps, as.factor(act$date), sum, na.rm=TRUE)
hist(sumbydate)
plot(meansbydate)
plot(mediansbydate)
summary(mediansbydate)
median(act$steps)
?median()
median(act$steps, na.rm=T)
mean(act$steps, na.rm=T)
sumbyinterval = tapply(act$steps, as.factor(interval), sum, na.rm=T)
sumbyinterval = tapply(act$steps, as.factor(act$interval), sum, na.rm=T)
hist(sumbyinterval)
act2 = act(act$steps > 0,)
act2 = act[act$steps > 0,]
mediansbyinterval = tapply(act$steps, as.factor(act$interval), median, na.rm=TRUE)
plot(mediansbyinterval)
hist(mediansbyinterval)
hist(mediansbydate)
summary(mediansbydate)
hist(sumbydate)
mediansbydate2 = tapply(act2$steps, as.factor(act2$date), median, na.rm=TRUE)
plot(mediansbydate1)
plot(mediansbydate2)
summary(act)
nasbyinterval = act[is.na(act$steps),]
View(nasbyinterval)
hist(nasbyinterval)
hist(nasbyinterval$interval)
hist(nasbyinterval$date)
?hist()
hist(nasbyinterval$date, breaks=61)
nas = act[is.na(act$steps),]
hist(nas$interval)
hist(nas$date, breaks=61)
?box()
?boxplot()
boxplot(act[date=="2012-10-01"])
boxplot(act[act$date=="2012-10-01",act$steps])
boxplot(act$steps)
boxplot(log(act$steps))
boxplot(act$steps)
rm(list=ls(all))
rm(list=ls())
dev.off()
quit()
